name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  node-version: 12.x

jobs:
  build-and-test:
    runs-on: ubuntu-18.04

    # strategy:
    #   matrix:
    #     node-version: [8.x, 10.x, 12.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Deps
        run: yarn

      - name: Build
        run: yarn build

      - name: Build docs
        run: yarn build:docs

      - name: Test
        run: yarn test

      - name: Upload to codecov
        if: matrix.node-version == '12.x'
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          name: codecov-umbrella
          file: ./coverage/clover.xml

      # - name: Upload Artifact
      #   uses: actions/upload-artifact@v1.0.0
      #   with:
      #     name: xterm-player-pkg
      #     path: dist

  update-docs:
    needs: [build-and-test]

    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Deps
        run: yarn

      - name: Build docs
        run: yarn build:docs

      - name: Check if docs needs to update
        run: |
          git add docs
          if [ $(git diff --cached --numstat | wc -l) -ne 0 ]; then
            echo "docs updated found!"
            echo "::set-env name=update_docs::true"
          fi

      - name: Update docs
        if: env.update_docs
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "update docs"

      - name: Push changes
        if: env.update_docs
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
